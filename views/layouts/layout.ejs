<!DOCTYPE html>
<html>

<head>
  <title>Strandbad Kattenhorn</title>

  <!-- Viewport mobile tag for sensible mobile support -->
  <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">

  <% /* If you want to discourage search engines from indexing this site, uncomment the following line: */%>
    <% /* <meta name="robots" content="noindex"> */%>


    <!--
        Stylesheets and Preprocessors
        ==============================

        You can always bring in CSS files manually with `<link>` tags, or asynchronously
        using a solution like AMD (RequireJS).  Or, if you like, you can take advantage
        of Sails' conventional asset pipeline (boilerplate Gruntfile).

        By default, stylesheets from your `assets/styles` folder are included
        here automatically (between STYLES and STYLES END). Both CSS (.css) and LESS (.less)
        are supported. In production, your styles will be minified and concatenated into
        a single file.

        To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Change the order of your CSS files
            + Import stylesheets from other directories
            + Use a different or additional preprocessor, like SASS, SCSS or Stylus
    -->

      <!--STYLES-->
      <link rel="stylesheet" href="/dependencies/bootstrap-green.min.css">
      <link rel="stylesheet" href="/styles/importer.css">
      <link rel="stylesheet" href="/styles/style.css">
      <!--STYLES END-->
</head>

<body>
  <header class="navbar navbar-expand-sm navbar-dark bg-dark flex-column flex-md-row justify-content-between" purpose="page-header">
    <a style="cursor: pointer;" class="navbar-brand mr-0" href="/"><img style="height: 20px;" class="logo" alt="NEW_APP_NAME logo" src="/images/logo.png"/></a>
    <div class="navbar-nav flex-row">
      <!-- LOGGED-IN NAVIGATION -->
      <% if(req.me) { %>
      <!-- Added Block fÃ¼r Super user Navigation-->
      <% if(req.me.isSuperAdmin) { %>
        <div class="nav-item dropdown d-none d-sm-block">
          <a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">
            Speisekarte</a>
          <div style="left: auto; right: 0;" class="dropdown-menu" aria-labelledby="header-account-menu-link">
            <a class="dropdown-item" href="/meal">Speisen</a>
            <a class="dropdown-item" href="/category">Kategorien</a>
          </div>
        </div>
        <% } %>
      <!-- Only in desktop nav -->
      <% if(req.session.basket && req.session.basket.length> 0){ %>
        <a class="nav-item nav-link" href="/shoppingbasket">Warenkorb</a></li>
      <% } %>
      <div class="nav-item dropdown d-none d-sm-block">
        <a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">
          Account
        </a>
        <!--a class="nav-link dropdown-toggle" id="header-account-menu-link" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Account</a -->
        <div style="left: auto; right: 0;" class="dropdown-menu" aria-labelledby="header-account-menu-link">
          <a class="dropdown-item" href="/account">Settings</a>
          <a class="dropdown-item" href="/logout">Sign out</a>
        </div>
      </div>
      <!-- Only in mobile nav -->
      <a class="nav-item nav-link ml-2 mr-2 d-block d-sm-none" href="/account">Account Settings</a>
      <a class="nav-item nav-link ml-2 mr-2 d-block d-sm-none" href="/logout">Sign out</a>
      <% } else { %>
      <!-- LOGGED-OUT NAVIGATION -->
      <a class="nav-item nav-link ml-2 ml-md-0 mr-2" href="/login">Log in</a>
      <!-- Only in desktop nav -->
      <div class="form-inline d-none ml-2 d-md-block" >
        <a class="btn btn-outline-info" href="/signup">Sign up</a>
      </div>
      <!-- Only in mobile nav -->
      <a class="nav-item nav-link text-info ml-2 d-block d-md-none" href="/signup">Sign up</a>
      <% } %>
    </div>
  </header>
  <%- body %>
    <footer class="footer-container">
      <div class="footer-item">
        Strandbad Kattenhorn<BR>
        Strandbadstr. 8<BR>
        78337 Kattenhorn<BR>
        <p class="kontakt">
          Telefon 0049 7735 67770<BR>
          strandbad@kattenhorn.de<BR>
        </p>
      </div>
      <div class="footer-item">
        <ul>
          <li>Preisliste</li>
          <li>Impressum</li>
          <li>Datenschutz</li>
        </ul>
      </div>
    </footer>


    <!--
        Client-side Templates
        ========================

        HTML templates are important prerequisites of modern, rich client applications.
        To work their magic, frameworks like React, Vue.js, Angular, Ember, and Backbone
        require that you load these templates client-side.

        By default, your Gruntfile is configured to automatically load and precompile
        client-side JST templates in your `assets/templates` folder, then
        include them here automatically (between TEMPLATES and TEMPLATES END).

        To customize this behavior to fit your needs, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Import templates from other directories
            + Use a different view engine (handlebars, dust, pug/jade, etc.)
            + Internationalize your client-side templates using a server-side
              stringfile before they're served.
    -->

    <!--TEMPLATES-->
    <!--TEMPLATES END-->


    <!--
        Server-side View Locals
        ========================

        Sometimes, it's convenient to get access to your server-side view locals from
        client-side JavaScript.  This can improve page load times, remove the need for
        extra AJAX requests, and make your client-side code easier to understand and
        to maintain.  Sails provides a simple mechanism for accessing dynamic view
        locals: the "exposeLocalsToBrowser()" view partial.

        For more information on using this built-in feature, see:
        https://sailsjs.com/docs/concepts/views/locals#?escaping-untrusted-data-using-exposelocalstobrowser

    -->


    <!--

      Client-side Javascript
      ========================

      You can always bring in JS files manually with `script` tags, or asynchronously
      on the client using a solution like AMD (RequireJS).  Or, if you like, you can
      take advantage of Sails' conventional asset pipeline (boilerplate Gruntfile).

      By default, files in your `assets/js` folder are included here
      automatically (between SCRIPTS and SCRIPTS END).  Both JavaScript (.js) and
      CoffeeScript (.coffee) are supported. In production, your scripts will be minified
      and concatenated into a single file.

      To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
      For example, here are a few things you could do:

          + Change the order of your scripts
          + Import scripts from other directories
          + Use a different preprocessor, like TypeScript

    -->

    <!--SCRIPTS-->
    <script src="/dependencies/sails.io.js"></script>
    <script src="/dependencies/bootstrap.bundle.min.js"></script>
    <!--SCRIPTS END-->
</body>

</html>